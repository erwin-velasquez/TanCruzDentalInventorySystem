@model TanCruzDentalInventorySystem.ViewModels.SalesOrderFormViewModel

@{ 
    ViewBag.FormMode = "Edit";
}

@using (Html.BeginForm("SaveSalesOrderRecord", "SalesOrder", FormMethod.Post, new { @class = "form-horizontal needs-validation bg-light", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal ">
        <h4 class="form-title">Sales Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.SalesOrder.BusinessPartner.BusinessPartnerId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.SalesOrder.BusinessPartner.BusinessPartnerId, new SelectList(Model.BusinessPartners, "BusinessPartnerId", "BusinessPartnerName"), "Choose...", new { @class = "form-control custom-select d-block w-100", @required = "", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.SalesOrder.BusinessPartner.BusinessPartnerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.SalesOrder.DeliveryDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SalesOrder.DeliveryDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SalesOrder.DeliveryDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.SalesOrder.SalesOrderId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.SalesOrder.VersionTimeStamp)
                    @Html.EditorFor(model => model.SalesOrder.SalesOrderId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.SalesOrder.SalesOrderId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.SalesOrder.SalesOrderStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SalesOrder.SalesOrderStatus, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SalesOrder.SalesOrderStatus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.SalesOrder.PostingDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SalesOrder.PostingDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SalesOrder.PostingDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.SalesOrder.SalesOrderControlNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SalesOrder.SalesOrderControlNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SalesOrder.SalesOrderControlNumber, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.SalesOrder.Currency.CurrencyId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.SalesOrder.Currency.CurrencyId, new SelectList(Model.Currencies, "CurrencyId", "CurrencyName"), "Choose...", new { @class = "form-control custom-select d-block w-100", required = "" })
                    @Html.ValidationMessageFor(model => model.SalesOrder.Currency.CurrencyId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.SalesOrder.DocumentDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SalesOrder.DocumentDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SalesOrder.DocumentDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.SalesOrder.RefDocNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SalesOrder.RefDocNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SalesOrder.RefDocNumber, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-12">
                <table id="salesOrderDetailTable" class="display hover">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Item Name</th>
                            <th>Item ID</th>
                            <th>Item Price</th>
                            <th>Quantity-on-Hand</th>
                            <th>Quantity</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.SalesOrder.SalesOrderDetails.Count; i++)
                        {
                            <tr>
                                <td></td>
                                <td>@Html.HiddenFor(x => x.SalesOrder.SalesOrderDetails.ToArray()[i].Item.ItemName, new { @Name = "SalesOrder.SalesOrderDetails[" + i.ToString() + "].Item.ItemName" })@Model.SalesOrder.SalesOrderDetails.ToArray()[i].Item.ItemName</td>
                                <td>@Html.HiddenFor(x => x.SalesOrder.SalesOrderDetails.ToArray()[i].Item.ItemId, new { @Name = "SalesOrder.SalesOrderDetails[" + i.ToString() + "].Item.ItemId" })@Model.SalesOrder.SalesOrderDetails.ToArray()[i].Item.ItemId</td>
                                <td>@Html.HiddenFor(x => x.SalesOrder.SalesOrderDetails.ToArray()[i].ItemPriceAmount, new { @Name = "SalesOrder.SalesOrderDetails[" + i.ToString() + "].ItemPriceAmount" })@Model.SalesOrder.SalesOrderDetails.ToArray()[i].ItemPriceAmount</td>
                                <td>@Html.HiddenFor(x => x.SalesOrder.SalesOrderDetails.ToArray()[i].QuantityOnHand, new { @Name = "SalesOrder.SalesOrderDetails[" + i.ToString() + "].QuantityOnHand" })@Model.SalesOrder.SalesOrderDetails.ToArray()[i].QuantityOnHand</td>
                                <td>@Html.HiddenFor(x => x.SalesOrder.SalesOrderDetails.ToArray()[i].Quantity, new { @Name = "SalesOrder.SalesOrderDetails[" + i.ToString() + "].Quantity" })@Model.SalesOrder.SalesOrderDetails.ToArray()[i].Quantity</td>
                                <td>@Html.HiddenFor(x => x.SalesOrder.SalesOrderDetails.ToArray()[i].SalesOrderDetailTotal, new { @Name = "SalesOrder.SalesOrderDetails[" + i.ToString() + "].SalesOrderDetailTotal" })@Model.SalesOrder.SalesOrderDetails.ToArray()[i].SalesOrderDetailTotal</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalesOrder.SalesOrderDiscount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalesOrder.SalesOrderDiscount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalesOrder.SalesOrderDiscount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalesOrder.SalesOrderDiscountAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalesOrder.SalesOrderDiscountAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalesOrder.SalesOrderDiscountAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalesOrder.SalesOrderTax, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalesOrder.SalesOrderTax, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalesOrder.SalesOrderTax, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalesOrder.SalesOrderTotal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalesOrder.SalesOrderTotal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalesOrder.SalesOrderTotal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalesOrder.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalesOrder.UserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalesOrder.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.SalesOrder.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.SalesOrder.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SalesOrder.Remarks, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="submitButton" type="submit" value="Submit" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts{

    @Scripts.Render("~/Scripts/SalesOrder/SalesOrderEdit.js");
}