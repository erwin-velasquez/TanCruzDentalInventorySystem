@model TanCruzDentalInventorySystem.ViewModels.SalesOrderViewModel

@{
    ViewBag.FormMode = "View";
}

<div class="form-horizontal bg-light">
    <h4 class="form-title">
        Sales Order
        @if (Request.IsAuthenticated && User.IsInRole("Editor"))
        {
            @Html.ActionLink("[Edit]", "EditSalesOrderRecord", new { salesOrderId = Model.SalesOrderId }, new { @style = "font-size:8pt" })
        }
        <input id="printButton" type="button" value="Print" class="btn btn-primary pull-right" />
    </h4>
    <hr />
    <div class="row">
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.BusinessPartner.BusinessPartnerId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p>@Html.DisplayFor(model => model.BusinessPartner.BusinessPartnerName, new { @class = "form-control" })</p>
            </div>
        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.DeliveryDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p>@Html.DisplayFor(model => model.DeliveryDate, new { @class = "form-control" })</p>
            </div>
        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.SalesOrderId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.SalesOrderId)
                <p>@Html.DisplayFor(model => model.SalesOrderId, new { @class = "form-control" })</p>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.SalesOrderStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p>@Html.DisplayFor(model => model.SalesOrderStatus, new { @class = "form-control" })</p>
            </div>
        </div>
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.PostingDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p>@Html.DisplayFor(model => model.PostingDate, new { @class = "form-control" })</p>
            </div>
        </div>
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.SalesOrderControlNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p>@Html.DisplayFor(model => model.SalesOrderControlNumber, new { @class = "form-control" })</p>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.Currency, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p>@Html.DisplayFor(model => model.Currency.CurrencyName, new { @class = "form-control" })</p>
            </div>
        </div>
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.DocumentDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p>@Html.DisplayFor(model => model.DocumentDate, new { @class = "form-control" })</p>
            </div>
        </div>
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.RefDocNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p>@Html.DisplayFor(model => model.RefDocNumber, new { @class = "form-control" })</p>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-12">
            <table id="salesOrderDetailTable" class="display hover">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Item Name</th>
                        <th>Item ID</th>
                        <th>Item Price</th>
                        <th>Quantity-on-Hand</th>
                        <th>Quantity</th>
                        <th>Total</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.SalesOrderDetails.Count; i++)
                    {
                        <tr>
                            <td></td>
                            <td>@Html.HiddenFor(x => x.SalesOrderDetails.ToArray()[i].Item.ItemName, new { @Name = "SalesOrder.SalesOrderDetails[" + i.ToString() + "].Item.ItemName" })@Model.SalesOrderDetails.ToArray()[i].Item.ItemName</td>
                            <td>@Html.HiddenFor(x => x.SalesOrderDetails.ToArray()[i].Item.ItemId, new { @Name = "SalesOrder.SalesOrderDetails[" + i.ToString() + "].Item.ItemId" })@Model.SalesOrderDetails.ToArray()[i].Item.ItemId</td>
                            <td>@Html.HiddenFor(x => x.SalesOrderDetails.ToArray()[i].ItemPriceAmount, new { @Name = "SalesOrder.SalesOrderDetails[" + i.ToString() + "].ItemPriceAmount" })@Model.SalesOrderDetails.ToArray()[i].ItemPriceAmount</td>
                            <td>@Html.HiddenFor(x => x.SalesOrderDetails.ToArray()[i].QuantityOnHand, new { @Name = "SalesOrder.SalesOrderDetails[" + i.ToString() + "].QuantityOnHand" })@Model.SalesOrderDetails.ToArray()[i].QuantityOnHand</td>
                            <td>@Html.HiddenFor(x => x.SalesOrderDetails.ToArray()[i].Quantity, new { @Name = "SalesOrder.SalesOrderDetails[" + i.ToString() + "].Quantity" })@Model.SalesOrderDetails.ToArray()[i].Quantity</td>
                            <td>@Html.HiddenFor(x => x.SalesOrderDetails.ToArray()[i].SalesOrderDetailTotal, new { @Name = "SalesOrder.SalesOrderDetails[" + i.ToString() + "].SalesOrderDetailTotal" })@Model.SalesOrderDetails.ToArray()[i].SalesOrderDetailTotal</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SalesOrderDiscount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <p>@Html.DisplayFor(model => model.SalesOrderDiscount, new { @class = "form-control" })</p>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.SalesOrderDiscountAmount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <p>@Html.DisplayFor(model => model.SalesOrderDiscountAmount, new { @class = "form-control" })</p>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.SalesOrderTax, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <p>@Html.DisplayFor(model => model.SalesOrderTax, new { @class = "form-control" })</p>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <p>@Html.DisplayFor(model => model.UserId, new { @class = "form-control" })</p>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <p>@Html.DisplayFor(model => model.Remarks, new { @class = "form-control" })</p>
        </div>
    </div>
</div>

<p>
    @Html.ActionLink("Back to List", "Index")
</p>

@Html.Action("ReportModal", "Report")

@section scripts{

    @Scripts.Render("~/Scripts/SalesOrder/SalesOrderView.js");
}