@model TanCruzDentalInventorySystem.ViewModels.BusinessPartnerFormViewModel

@{
    ViewBag.Title = "EditBusinessPartnerRecord";
}


@using (Html.BeginForm("SaveBusinessPartnerRecord", "BusinessPartner", FormMethod.Post, new { @id = "MainForm", @class = "form-horizontal needs-validation bg-light", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 class="form-title">Business Partner</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.BusinessPartner.BusinessPartnerName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BusinessPartner.BusinessPartnerName, new { htmlAttributes = new { @class = "form-control" }, required = "" })
                    @Html.ValidationMessageFor(model => model.BusinessPartner.BusinessPartnerName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.BusinessPartner.BusinessPartnerAlias, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BusinessPartner.BusinessPartnerAlias, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BusinessPartner.BusinessPartnerAlias, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.BusinessPartner.BusinessPartnerId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.BusinessPartner.VersionTimeStamp)
                    @Html.EditorFor(model => model.BusinessPartner.BusinessPartnerId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.BusinessPartner.BusinessPartnerId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.BusinessPartner.BusinessPartnerFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BusinessPartner.BusinessPartnerFirstName, new { htmlAttributes = new { @class = "form-control" }, required = "" })
                    @Html.ValidationMessageFor(model => model.BusinessPartner.BusinessPartnerFirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.BusinessPartner.BusinessPartnerMiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BusinessPartner.BusinessPartnerMiddleName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BusinessPartner.BusinessPartnerMiddleName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.BusinessPartner.BusinessPartnerLastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BusinessPartner.BusinessPartnerLastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BusinessPartner.BusinessPartnerLastName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.BusinessPartner.BusinessPartnerType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BusinessPartner.BusinessPartnerType, new { htmlAttributes = new { @class = "form-control" }, required = "" })
                    @Html.ValidationMessageFor(model => model.BusinessPartner.BusinessPartnerType, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="btn"></div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="submitButton" type="submit" value="Submit" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
