@model TanCruzDentalInventorySystem.ViewModels.SalesOrderPaymentFormViewModel

@{
    ViewBag.Title = "Create Sales Order Payment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("SaveSalesOrderPayment", "Payment", FormMethod.Post, new { @id = "MainForm", @class = "form-horizontal needs-validation bg-light", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Sales Order Payment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.SalesOrderPayment.SalesOrder.SalesOrderId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.SalesOrderPayment.SalesOrder.SalesOrderId)
                    @Html.EditorFor(model => model.SalesOrderPayment.SalesOrder.SalesOrderId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.SalesOrderPayment.SalesOrder.SalesOrderId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.SalesOrderPayment.SalesOrder.SalesOrderTotal, "Total Amount to Pay", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SalesOrderPayment.SalesOrder.SalesOrderTotal, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.SalesOrderPayment.SalesOrder.SalesOrderTotal, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.SalesOrderPayment.Currency.CurrencyName, "Currency", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SalesOrderPayment.Currency.CurrencyName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SalesOrderPayment.SalesOrder.SalesOrderTotal, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <table id="salesOrderPaymentDetailTable" class="display hover">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Action</th>
                        <th>@Html.DisplayNameFor(model => model.SalesOrderPayment.SalesOrderPaymentDetails[0].PaymentType)</th>
                        <th>@Html.DisplayNameFor(model => model.SalesOrderPayment.SalesOrderPaymentDetails[0].SalesOrderPaymentDetailTotal)</th>
                        <th>@Html.DisplayNameFor(model => model.SalesOrderPayment.SalesOrderPaymentDetails[0].Remarks)</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.SalesOrderPayment.SalesOrderPaymentDetails.Count(); i++)
                    {
                        <tr id="@Html.ValueFor(x => x.SalesOrderPayment.SalesOrderPaymentDetails.ToArray()[i].SalesOrderPaymentDetailId)">
                            <td>@(i + 1)</td>
                            <td>Action</td>
                            <td>@Html.HiddenFor(x => x.SalesOrderPayment.SalesOrderPaymentDetails.ToArray()[i].PaymentType)@Model.SalesOrderPayment.SalesOrderPaymentDetails.ToArray()[i].PaymentType</td>
                            <td>@Html.HiddenFor(x => x.SalesOrderPayment.SalesOrderPaymentDetails.ToArray()[i].SalesOrderPaymentDetailTotal)@Model.SalesOrderPayment.SalesOrderPaymentDetails.ToArray()[i].SalesOrderPaymentDetailTotal</td>
                            <td>@Html.HiddenFor(x => x.SalesOrderPayment.SalesOrderPaymentDetails.ToArray()[i].Remarks)@Model.SalesOrderPayment.SalesOrderPaymentDetails.ToArray()[i].Remarks</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save Payment" class="btn btn-warning" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/Scripts/Payment/SalesOrderPaymentCreate.js");
}
