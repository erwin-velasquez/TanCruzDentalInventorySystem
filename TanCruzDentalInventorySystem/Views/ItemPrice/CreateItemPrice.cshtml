@model TanCruzDentalInventorySystem.ViewModels.ItemPriceFormViewModel

@using (Html.BeginForm("SaveItemPriceRecord", "ItemPrice", FormMethod.Post, new { @id = "MainForm", @class = "form-horizontal needs-validation bg-light", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 class="form-title">Item Price</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.ItemPrice.ItemPriceName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ItemPrice.ItemPriceName, new { htmlAttributes = new { @class = "form-control" }, required = "" })
                    @Html.ValidationMessageFor(model => model.ItemPrice.ItemPriceName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.ItemPrice.ItemPriceDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ItemPrice.ItemPriceDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ItemPrice.ItemPriceDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.ItemPrice.ItemPriceId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.ItemPrice.VersionTimeStamp)
                    @Html.EditorFor(model => model.ItemPrice.ItemPriceId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.ItemPrice.ItemPriceId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.ItemPrice.IsDefault, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ItemPrice.IsDefault, new { htmlAttributes = new { @class = "form-control" }, required = "" })
                    @Html.ValidationMessageFor(model => model.ItemPrice.IsDefault, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.ItemPrice.Type, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownListFor(model => model.ItemPrice.Type, new SelectList(Model.ItemPriceTypes), "Choose...", new { @class = "form-control custom-select d-block w-100", required = "" })
					@Html.ValidationMessageFor(model => model.ItemPrice.Type, "", new { @class = "text-danger" })
				</div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.ItemPrice.ItemId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ItemPrice.ItemId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.ItemPrice.ItemId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.ItemPrice.BaseCurrency, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.ItemPrice.BaseCurrency.CurrencyId, new SelectList(Model.Currencies, "CurrencyId", "CurrencyName"), "Choose...", new { @class = "form-control custom-select d-block w-100", required = "" })
                    @Html.ValidationMessageFor(model => model.ItemPrice.BaseCurrency, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.ItemPrice.PriceAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ItemPrice.PriceAmount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ItemPrice.PriceAmount, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="btn"></div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="submitButton" type="submit" value="Submit" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "GetItemPrices", new { itemId = Model.ItemPrice.ItemId })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
