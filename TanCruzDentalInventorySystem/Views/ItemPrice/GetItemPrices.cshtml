@model IEnumerable<TanCruzDentalInventorySystem.ViewModels.ItemPriceViewModel>

@{
    ViewBag.Title = "ItemPrices";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Prices for Item - @ViewBag.ItemId - @ViewBag.ItemName</h3>
<hr />
<div class="row">
    <div class="col-md-6 mb-3">
        <form class="p-2">
            <div class="input-group">
                <button type="button" class="btn btn-warning margin" id="btn-add-new-item-price">
                    Add Price
                </button>
            </div>
        </form>
    </div>
</div>

<div class="container">
    <table id="itemPriceListTable" class="display hover">
        <thead>
            <tr>
                <th>#</th>
                @if (Request.IsAuthenticated && User.IsInRole("Editor"))
                {
                    <th>Action</th>
                }
                <th>@Html.DisplayNameFor(model => model.ItemPriceId)</th>
                <th>@Html.DisplayNameFor(model => model.ItemPriceName)</th>
                <th>@Html.DisplayNameFor(model => model.ItemPriceDescription)</th>
                <th>@Html.DisplayNameFor(model => model.Item.ItemId)</th>
                <th>@Html.DisplayNameFor(model => model.IsDefault)</th>
                <th>@Html.DisplayNameFor(model => model.Type)</th>
                <th>@Html.DisplayNameFor(model => model.PriceAmount)</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Count(); i++)
            {
            <tr>
                <td>@(i + 1)</td>
                @if (Request.IsAuthenticated && User.IsInRole("Editor"))
                {
                    <td>
                        @Html.ActionLink("Edit", "EditItemPriceRecord", new { itemPriceId = @Model.ToArray()[i].ItemPriceId }, new { @class = "indexItemStatusEditBtn btn-outline-dark btn btn-sm" })
                        @Html.ActionLink("View", "ItemPriceRecord", new { itemPriceId = @Model.ToArray()[i].ItemPriceId }, new { @class = "indexItemStatusEditBtn btn-outline-dark btn btn-sm" })
                    </td>
                }
                <td>@Html.HiddenFor(x => x.ToArray()[i].ItemPriceId)@Model.ToArray()[i].ItemPriceId</td>
                <td>@Html.HiddenFor(x => x.ToArray()[i].ItemPriceId)@Model.ToArray()[i].ItemPriceName</td>
                <td>@Html.HiddenFor(x => x.ToArray()[i].ItemPriceId)@Model.ToArray()[i].ItemPriceDescription</td>
                <td>@Html.HiddenFor(x => x.ToArray()[i].ItemPriceId)@Model.ToArray()[i].Item.ItemId</td>
                <td>@Html.HiddenFor(x => x.ToArray()[i].ItemPriceId)@Model.ToArray()[i].IsDefault</td>
                <td>@Html.HiddenFor(x => x.ToArray()[i].ItemPriceId)@Model.ToArray()[i].Type</td>
                <td>@Html.HiddenFor(x => x.ToArray()[i].ItemPriceId)@Model.ToArray()[i].PriceAmount</td>
            </tr>
            }
        </tbody>
    </table>
</div>

@section scripts{

    <script type="text/javascript">
        const urlParams = new URLSearchParams(window.location.search);
        const itemId = urlParams.get('itemId');

        var CreateItemPriceURL = "@Url.Content("~/ItemPrice/CreateItemPrice?itemId=")" + itemId;
        var EditItemPriceRecordUrl = "@Url.Content("~/ItemPrice/EditItemPriceRecord?itemPriceId=")";
        var ViewItemPriceRecordUrl = "@Url.Content("~/ItemPrice/ItemPriceRecord?itemPriceId=")";
    </script>

    @Scripts.Render("~/Scripts/ItemPrice/ItemPriceIndex.js");
}



<p>
    @Html.ActionLink("Back to List", "GetItemsDefaultPrices", new { })
</p>