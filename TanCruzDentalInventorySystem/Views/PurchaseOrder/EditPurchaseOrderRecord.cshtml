@model TanCruzDentalInventorySystem.ViewModels.PurchaseOrderFormViewModel


@using (Html.BeginForm("SavePurchaseOrderRecord", "PurchaseOrder", FormMethod.Post, new { @class = "form-horizontal needs-validation bg-light", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 class="form-title">Purchase Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.PurchaseOrder.BusinessPartner.BusinessPartnerId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.PurchaseOrder.PurchaseOrderDetailsJson, new { id = "PurchaseOrderDetailsJson" })
                    @Html.DropDownListFor(m => m.PurchaseOrder.BusinessPartner.BusinessPartnerId, new SelectList(Model.BusinessPartners, "BusinessPartnerId", "BusinessPartnerName"), "Choose...", new { @class = "form-control custom-select d-block w-100", required = "" })
                    @Html.ValidationMessageFor(model => model.PurchaseOrder.BusinessPartner.BusinessPartnerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.PurchaseOrder.DeliveryDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PurchaseOrder.DeliveryDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PurchaseOrder.DeliveryDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.PurchaseOrder.PurchaseOrderId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.PurchaseOrder.VersionTimeStamp)
                    @Html.EditorFor(model => model.PurchaseOrder.PurchaseOrderId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.PurchaseOrder.PurchaseOrderId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.PurchaseOrder.PurchaseOrderStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PurchaseOrder.PurchaseOrderStatus, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PurchaseOrder.PurchaseOrderStatus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.PurchaseOrder.PostingDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PurchaseOrder.PostingDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PurchaseOrder.PostingDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.PurchaseOrder.PurchaseOrderControlNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PurchaseOrder.PurchaseOrderControlNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PurchaseOrder.PurchaseOrderControlNumber, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.PurchaseOrder.Currency.CurrencyId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.PurchaseOrder.Currency.CurrencyId, new SelectList(Model.Currencies, "CurrencyId", "CurrencyName"), "Choose...", new { @class = "form-control custom-select d-block w-100", required = "" })
                    @Html.ValidationMessageFor(model => model.PurchaseOrder.Currency.CurrencyId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.PurchaseOrder.DocumentDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PurchaseOrder.DocumentDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PurchaseOrder.DocumentDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.PurchaseOrder.RefDocNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PurchaseOrder.RefDocNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PurchaseOrder.RefDocNumber, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-4">
                <div class="col-md-10">
                    <a href="/" type="button" class="btn btn-primary" data-toggle="modal" data-target="#addItemDetailModal">
                        Add Item
                    </a>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-12">
                <table id="purchaseOrderDetailTable" class="display hover"></table>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PurchaseOrder.PurchaseOrderDiscount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PurchaseOrder.PurchaseOrderDiscount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PurchaseOrder.PurchaseOrderDiscount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PurchaseOrder.PurchaseOrderDiscountAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PurchaseOrder.PurchaseOrderDiscountAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PurchaseOrder.PurchaseOrderDiscountAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PurchaseOrder.PurchaseOrderTax, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PurchaseOrder.PurchaseOrderTax, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PurchaseOrder.PurchaseOrderTax, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PurchaseOrder.PurchaseOrderTotal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PurchaseOrder.PurchaseOrderTotal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PurchaseOrder.PurchaseOrderTotal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PurchaseOrder.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PurchaseOrder.UserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PurchaseOrder.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>

        <!-- Add Item Modal -->
        <div class="modal fade" id="addItemDetailModal" tabindex="-1" role="dialog" aria-labelledby="addItemDetailModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addItemDetailModalLabel">Add Item Detail</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="form-group col-md-4">
                                <span class="control-label col-md-2">Item Id</span>
                                <div class="col-md-10">
                                    <input type="text" id="txt-item-id" class="form-control" maxlength="10" />
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                <span class="control-label col-md-2">Item Name</span>
                                <div class="col-md-10">
                                    <input type="text" id="txt-item-name" class="form-control" readonly="readonly" />
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                <span class="control-label col-md-2">Quantity on Hand</span>
                                <div class="col-md-10">
                                    <input type="text" id="txt-quantity-hand" class="form-control" readonly="readonly" />
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-4">
                                <span class="control-label col-md-2">Item Price</span>
                                <div class="col-md-10">
                                    <input type="number" id="txt-item-price" class="form-control" min="0" value="0" step=".01" />
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                <span class="control-label col-md-2">Quantity</span>
                                <div class="col-md-10">
                                    <input type="number" id="txt-item-quantity" class="form-control" min="0" value="0" />
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                <span class="control-label col-md-2">Total</span>
                                <div class="col-md-10">
                                    <input type="text" id="txt-item-total" class="form-control" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button id="saveChangesButton" type="button" class="btn btn-primary">Save changes</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script type="text/javascript">

        $(document).ready(function () {
            var json = JSON.parse('@Html.Raw(@Model.PurchaseOrder.PurchaseOrderDetailsJson)');

            var table = $('#purchaseOrderDetailTable').DataTable({
                "scrollX": true,
                data: json,
                "columns": [
                    {
                        "data": null,
                        "title": "#",
                        "width": "30px",
                        "defaultContent": '',
                        "className": "dt-center"
                    },
                    {
                        "data": "Item.ItemName",
                        "title": "Item Name",
                        "width": "200px",
                        "className": "dt-left"
                    },
                    {
                        "data": "Item.ItemId",
                        "title": "Item Id",
                        "width": "150px",
                        "className": "dt-left"
                    },
                    {
                        "data": "ItemPriceAmount",
                        "title": "Item Price",
                        "width": "90px",
                        "className": "dt-center"
                    },
                    {
                        "data": "QuantityOnHand",
                        "title": "Quantity On-hand",
                        "width": "150px",
                        "defaultContent": '',
                        "className": "dt-center"
                    },
                    {
                        "data": "Quantity",
                        "title": "Quantity",
                        "width": "120px",
                        "defaultContent": '',
                        "className": "dt-center"
                    },
                    {
                        "data": null,
                        "title": "Total",
                        "width": "110px",
                        "defaultContent": '',
                        "className": "dt-center"
                    },
                ],
                "language": {
                    "processing": "loading....",
                    "emptyTable": "No data found"
                },
                createdRow: function (row) {
                    var td = $(row).find("[class^=truncate]");
                    if (td) {
                        td.attr("title", td.html());
                    }
                },
                "paging": true,
                "autoWidth": true,
                "bLengthChange": false,
                "bPaginate": false,
                buttons: [
                    {
                        text: 'Reload',
                        action: function (e, dt, node, config) {
                            dt.ajax.reload();
                        }
                    }
                ]
            });

            $('#saveChangesButton').on('click', function () {
                var url = "/api/ItemApi/ItemRecord?itemId=" + $("#txt-item-id").val();
                $.get(url, function (data) {
                    if (data) {
                        $("#txt-item-name").val(data.item.ItemName);
                        $("#txt-item-id").val(data.item.ItemId);
                        var Item = {
                            "Item": {
                                "ItemName": $("#txt-item-name").val(),
                                "ItemId": $("#txt-item-id").val(),
                            },
                            "ItemPriceAmount": $("#txt-item-price").val(),
                            "Quantity": $("#txt-item-quantity").val(),
                            "QuantityOnHand": 1000,
                            "Total": $("#txt-item-total").val(),
                        }
                        table.row.add(Item).draw();
                        var itemList = [];
                        $.each(table.rows().data().toArray(), function (index, value) {
                            var k = {
                                "Item": {
                                    "ItemId": value.Item.ItemId,
                                    "ItemName": value.Item.ItemName
                                },
                                "ItemPriceAmount": parseFloat(value.ItemPriceAmount),
                                "Quantity": value.Quantity,
                                "QuantityOnHand": value.QuantityOnHand,
                            };
                            itemList.push(k);
                        });
                        $("#PurchaseOrderDetailsJson").val(JSON.stringify(itemList));
                        $("#addItemDetailModal").modal('hide');
                    }
                });
            });
        });
    </script>
}