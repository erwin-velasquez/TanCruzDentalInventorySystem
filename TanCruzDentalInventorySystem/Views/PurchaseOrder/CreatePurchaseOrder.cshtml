@model TanCruzDentalInventorySystem.ViewModels.PurchaseOrderFormViewModel

@{
    ViewBag.FormMode = "Create";
}

@using (Html.BeginForm("SavePurchaseOrderRecord", "PurchaseOrder", FormMethod.Post, new { @id = "MainForm", @class = "form-horizontal needs-validation bg-light", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal ">
        <h4 class="form-title">Purchase Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.PurchaseOrder.BusinessPartner.BusinessPartnerId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.PurchaseOrder.BusinessPartner.BusinessPartnerId)
                    @Html.EditorFor(model => model.PurchaseOrder.BusinessPartner.BusinessPartnerName, new { htmlAttributes = new { @class = "form-control" }, required = "" })
                    @Html.ValidationMessageFor(model => model.PurchaseOrder.BusinessPartner.BusinessPartnerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.PurchaseOrder.DeliveryDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PurchaseOrder.DeliveryDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PurchaseOrder.DeliveryDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.PurchaseOrder.PurchaseOrderId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.PurchaseOrder.VersionTimeStamp)
                    @Html.EditorFor(model => model.PurchaseOrder.PurchaseOrderId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.PurchaseOrder.PurchaseOrderId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @*@Html.EditorFor(model => model.PurchaseOrder.PurchaseOrderDetails[0].PurchaseOrderDetailId, new { htmlAttributes = new { @class = "form-control" } })*@

        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.PurchaseOrder.PurchaseOrderStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PurchaseOrder.PurchaseOrderStatus, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.PurchaseOrder.PurchaseOrderStatus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.PurchaseOrder.PostingDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PurchaseOrder.PostingDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PurchaseOrder.PostingDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.PurchaseOrder.PurchaseOrderControlNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PurchaseOrder.PurchaseOrderControlNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PurchaseOrder.PurchaseOrderControlNumber, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.PurchaseOrder.Currency.CurrencyId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.PurchaseOrder.Currency.CurrencyId, new SelectList(Model.Currencies, "CurrencyId", "CurrencyName", Model.Currencies.ToArray()[0].CurrencyName), new { @class = "form-control custom-select d-block w-100", required = "" })
                    @Html.ValidationMessageFor(model => model.PurchaseOrder.Currency.CurrencyId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.PurchaseOrder.DocumentDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PurchaseOrder.DocumentDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PurchaseOrder.DocumentDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.PurchaseOrder.RefDocNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PurchaseOrder.RefDocNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PurchaseOrder.RefDocNumber, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <button type="button" class="btn btn-primary" id="searchItemButton">
            Add
        </button>

        <button type="button" class="btn btn-primary" id="deleteItembutton">
            Delete
        </button>
        @Html.ValidationMessageFor(model => model.PurchaseOrder.PurchaseOrderDetails, "", new { @class = "text-danger" })
        <div class="row">
            <div class="form-group col-md-12">
                <table id="purchaseOrderDetailTable" class="display hover"></table>
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.PurchaseOrder.PurchaseOrderDiscount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PurchaseOrder.PurchaseOrderDiscount, new { htmlAttributes = new { @class = "form-control readonly", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.PurchaseOrder.PurchaseOrderDiscount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PurchaseOrder.PurchaseOrderDiscountAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PurchaseOrder.PurchaseOrderDiscountAmount, new { htmlAttributes = new { @class = "form-control readonly", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.PurchaseOrder.PurchaseOrderDiscountAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PurchaseOrder.PurchaseOrderTax, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PurchaseOrder.PurchaseOrderTax, new { htmlAttributes = new { @class = "form-control readonly", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.PurchaseOrder.PurchaseOrderTax, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PurchaseOrder.PurchaseOrderTotal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PurchaseOrder.PurchaseOrderTotal, new { htmlAttributes = new { @class = "form-control readonly", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.PurchaseOrder.PurchaseOrderTotal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PurchaseOrder.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PurchaseOrder.UserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PurchaseOrder.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.PurchaseOrder.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.PurchaseOrder.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PurchaseOrder.Remarks, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="submitButton" type="submit" value="Submit" class="btn btn-success" />
            </div>
        </div>

        <!-- Modal -->
        @Html.Partial("~/Views/Shared/BusinessPartnerSearchModal.cshtml", Model.BusinessPartners)
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts{

    @Scripts.Render("~/Scripts/Items/CreatePurchaseOrder.js");
}